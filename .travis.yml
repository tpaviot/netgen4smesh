sudo: false

language: cpp

# the secure below is the binstar token
# to genrate this secure
# first create an anconda cloud token
# $ anaconda auth -n the_token_name -o oce -c --scopes api
# the token is return as something like "oc-6654-12334_111225"
# then encrypt the token
# You have to be in the directory where you installed the local copy of the repository
# $ cd [your_dev_dir]/oce-conda
# $ travis encrypt BINSTAR_TOKEN="oc-6654-12334_11122"
# !!be careful about the typo BINSTAR_TOKEN with the proper case. Otherwise
# !!the $BINSTAR_TOKEN env var value will be null and the line
# !!anaconda -t $BINSTAR_TOKEN upload *.bz2 will not be run properly
# after that, copy/paste the secure on the following line
env:
  global:
    - secure: "ZoNtkNLbQj3G3uXIxpLvbJi4snanooQBGLD2D5/43toqz1IIBZUsBz+06YtHeGMxHP+07fwg50lwcgxx+9Nio5HX7EBF7adCoTG+GRSbLj7ROP9Lndm1kJvCyCfHXT5jxzTOvtXer0YP2VWp3XvtwJ+aQQUbdoUdnRoq41gSN3XDze07tmGWMBTMIO8cyJ3T8l2cAfQMY18q9tyC37JnI+Fix+4q4oKvKb/jLHmWtGW0S7axI6rxkbsd5osss2txg8ZaZIbn1N67k7pH/9BGLjJAXKn8cRVxPlRYCf1p2D18bpFsrvcPu5JDWqoAdyEuOeYCAA7PCEMfkbGAKyumkLbmBSF2AZDZlPC79509QUr6+Bg9xrp9ysg4fekX9pXIgo1lzb1ugohPRAVI1exCDHuHIo0z2CpcYSJ7uQEk/vZYKUPcFeHSwhaltpW3Ac6lMk6UKJuN5jC6Qo4uPEx8r5joWtH6K4VhUYYFASNNAVhOcJgWpvKReyPLODx68dLF79Bjp+AJS9sj9NUsIwghE9gehxIKFlkkpfOTFwWDJI58NLDNG2C/OAzAfoPWSUOTk3zTKH3h+F0GMKD4TMBoAxNCI/pIxEEAgg75/3jbh8++k8+NRu7WBg2bCaL8ezBsDJ1le1BDM+a2W4ZoHX8/+awCKWwEFkEnto+LZJo4iJg="

matrix:
  include:
    - env: ARCH="x86_64"
      os: linux
    - env: ARCH="x86_64"
      os: osx

# Use miniconda to install binary versions of numpy etc. from continuum
# analytic's repository. Follows an approach described by Dan Blanchard:
# https://gist.github.com/dan-blanchard/7045057
before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi;
  - chmod +x miniconda.sh
  # When we are installing the 32 Bit conda on a 64 Bit system, the miniconda
  # installer will ask for a "yes" despite the -b flag, so we pipe in a yes
  - yes | ./miniconda.sh -b -p $HOME/miniconda
  #- bash miniconda.sh -b -p -f $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$HOME/miniconda/lib:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Add dlr-sc channel for third part libraries
  - conda config --add channels https://conda.anaconda.org/dlr-sc
  - conda config --add channels https://conda.anaconda.org/oce
  - conda config --add channels https://conda.anaconda.org/conda-forge
  # install everything required to build the receipe
  - conda install conda-build anaconda-client

script:
  - conda build conda-receipe

branches:
  only:
    - master
    - /^review/
    - /^conda/
