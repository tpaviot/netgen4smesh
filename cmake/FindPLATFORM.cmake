#  Copyright (C) 2007-2016  CEA/DEN, EDF R&D, OPEN CASCADE
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Lesser General Public
#  License as published by the Free Software Foundation; either
#  version 2.1 of the License.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Lesser General Public License for more details.
#
#  You should have received a copy of the GNU Lesser General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
#  See http://www.salome-platform.org/ or email : webmaster.salome@opencascade.com
#

MARK_AS_ADVANCED(ISSUE)
FIND_FILE(ISSUE issue /etc)
IF(ISSUE)
  SET(WINDOWS 0)
ELSE()
  SET(WINDOWS 1)
ENDIF(ISSUE)

IF(WINDOWS)
  SET(MACHINE WINDOWS)
ELSE(WINDOWS)
  SET(MACHINE PCLINUX)
ENDIF(WINDOWS)

SET(CMAKE_INSTALL_PREFIX_ENV $ENV{CMAKE_INSTALL_PREFIX})
IF(CMAKE_INSTALL_PREFIX_ENV)
  SET(CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX_ENV} CACHE PATH "installation prefix" FORCE)
ENDIF(CMAKE_INSTALL_PREFIX_ENV)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE $ENV{CMAKE_BUILD_TYPE})
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE Release)
ENDIF(NOT CMAKE_BUILD_TYPE)

IF(WINDOWS)
ELSE(WINDOWS)
  SET(ADD_WERROR ON)
  SET(NAMES ACCEPT_SALOME_WARNINGS ACCEPT_${MODULE}_WARNINGS I_AM_A_TROLL_I_DO_NOT_FIX_${MODULE}_WARNINGS)
  FOREACH(name ${NAMES})
    SET(VAL $ENV{${name}})
    IF(X${VAL} STREQUAL X0)
      SET(ADD_WERROR ON)
    ENDIF(X${VAL} STREQUAL X0)
    IF(X${VAL} STREQUAL X1)
      SET(ADD_WERROR OFF)
    ENDIF(X${VAL} STREQUAL X1)
  ENDFOREACH(name ${NAMES})
  IF(ADD_WERROR)
    SET(CMAKE_C_FLAGS "-Werror")
    SET(CMAKE_CXX_FLAGS "-Werror")
  ENDIF(ADD_WERROR)
ENDIF(WINDOWS)

IF(CMAKE_BUILD_TYPE)
  IF(WINDOWS)
    MARK_AS_ADVANCED(CLEAR CMAKE_CONFIGURATION_TYPES)
    SET(CMAKE_CONFIGURATION_TYPES ${CMAKE_BUILD_TYPE} CACHE STRING "compilation types" FORCE)
  ELSE(WINDOWS)
    IF(CMAKE_BUILD_TYPE STREQUAL Debug)
      SET(CMAKE_C_FLAGS_DEBUG "-g")
      SET(CMAKE_CXX_FLAGS_DEBUG "-g")
    ENDIF(CMAKE_BUILD_TYPE STREQUAL Debug)
    IF(CMAKE_BUILD_TYPE STREQUAL Release)
      SET(CMAKE_C_FLAGS_RELEASE "-O1 -DNDEBUG")
      SET(CMAKE_CXX_FLAGS_RELEASE "-O1 -DNDEBUG")
    ENDIF(CMAKE_BUILD_TYPE STREQUAL Release)
  ENDIF(WINDOWS)
ENDIF(CMAKE_BUILD_TYPE)

SET(PLATFORM_CPPFLAGS)
SET(PLATFORM_LDFLAGS)
SET(PLATFORM_LIBADD)
IF(WINDOWS)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS)  # To disable windows warnings for strcpy, fopen, ...
  ADD_DEFINITIONS(-D_SCL_SECURE_NO_WARNINGS)  # To disable windows warnings std::copy, std::transform, ...
  ADD_DEFINITIONS(-DWNT)
  ADD_DEFINITIONS(-DPPRO_NT) # For medfile
  ADD_DEFINITIONS(-D_USE_MATH_DEFINES) # At least for MEDMEM
  #ADD_DEFINITIONS(-D_WIN32_WINNT=0x0500) # Windows 2000 or later API is required
  SET(PLATFORM_LIBADD ${PLATFORM_LIBADD} Ws2_32.lib)
  SET(PLATFORM_LIBADD ${PLATFORM_LIBADD} Userenv.lib) # At least for GEOM suit
ELSE(WINDOWS)
  SET(PLATFORM_LIBADD ${PLATFORM_LIBADD} -ldl)
ENDIF(WINDOWS)
